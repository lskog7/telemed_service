"""Initial revision

Revision ID: 10ae2ea388da
Revises: 
Create Date: 2024-11-10 19:07:05.263768

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '10ae2ea388da'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hospitals',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address'),
    sa.UniqueConstraint('name')
    )
    op.create_table('profiles',
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='genderenum', create_type=False), nullable=True),
    sa.Column('profession', sa.Enum('DEVELOPER', 'DESIGNER', 'MANAGER', 'TEACHER', 'DOCTOR', 'ENGINEER', 'MARKETER', 'WRITER', 'ARTIST', 'LAWYER', 'SCIENTIST', 'NURSE', 'UNEMPLOYED', name='professionenum', create_type=False), server_default=sa.text("'UNEMPLOYED'"), nullable=False),
    sa.Column('contacts', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('name', sa.Enum('ADMIN', 'MODERATOR', 'USER', name='roleenum', create_type=False), server_default=sa.text("'USER'"), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patients',
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='genderenum', create_type=False), nullable=False),
    sa.Column('profession', sa.Enum('DEVELOPER', 'DESIGNER', 'MANAGER', 'TEACHER', 'DOCTOR', 'ENGINEER', 'MARKETER', 'WRITER', 'ARTIST', 'LAWYER', 'SCIENTIST', 'NURSE', 'UNEMPLOYED', name='professionenum', create_type=False), server_default=sa.text("'UNEMPLOYED'"), nullable=False),
    sa.Column('contacts', sa.JSON(), nullable=True),
    sa.Column('diagnosis', sa.Enum('DIABETES', 'HYPERTENSION', 'ASTHMA', 'DEPRESSION', 'ANXIETY', 'ARTHRITIS', 'HEART_DISEASE', 'CANCER', 'ALLERGY', 'INFECTION', 'OBESITY', 'MIGRAINE', 'HEALTHY', name='diagnosesenum', create_type=False), server_default=sa.text("'HEALTHY'"), nullable=False),
    sa.Column('hospital_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['hospital_id'], ['hospitals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('patients')
    op.drop_table('roles')
    op.drop_table('profiles')
    op.drop_table('hospitals')
    # ### end Alembic commands ###

    op.execute('DROP TYPE IF EXISTS genderenum')
    op.execute('DROP TYPE IF EXISTS professionenum')
    op.execute('DROP TYPE IF EXISTS roleenum')
    op.execute('DROP TYPE IF EXISTS diagnosesenum')
